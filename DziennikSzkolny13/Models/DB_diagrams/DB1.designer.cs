#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DziennikSzkolny13.Models.DB_diagrams
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DziennikSzkolny13.Models.DziennikSzkolny13DB")]
	public partial class DB1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertKlasa(Klasa instance);
    partial void UpdateKlasa(Klasa instance);
    partial void DeleteKlasa(Klasa instance);
    partial void InsertNauczyciel(Nauczyciel instance);
    partial void UpdateNauczyciel(Nauczyciel instance);
    partial void DeleteNauczyciel(Nauczyciel instance);
    partial void InsertNieobecnosc(Nieobecnosc instance);
    partial void UpdateNieobecnosc(Nieobecnosc instance);
    partial void DeleteNieobecnosc(Nieobecnosc instance);
    partial void InsertOcena(Ocena instance);
    partial void UpdateOcena(Ocena instance);
    partial void DeleteOcena(Ocena instance);
    partial void InsertPrzedmiot(Przedmiot instance);
    partial void UpdatePrzedmiot(Przedmiot instance);
    partial void DeletePrzedmiot(Przedmiot instance);
    partial void InsertUczen(Uczen instance);
    partial void UpdateUczen(Uczen instance);
    partial void DeleteUczen(Uczen instance);
    #endregion
		
		public DB1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DziennikSzkolny13_Models_DziennikSzkolny13DBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DB1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Klasa> Klasas
		{
			get
			{
				return this.GetTable<Klasa>();
			}
		}
		
		public System.Data.Linq.Table<Nauczyciel> Nauczyciels
		{
			get
			{
				return this.GetTable<Nauczyciel>();
			}
		}
		
		public System.Data.Linq.Table<Nieobecnosc> Nieobecnoscs
		{
			get
			{
				return this.GetTable<Nieobecnosc>();
			}
		}
		
		public System.Data.Linq.Table<Ocena> Ocenas
		{
			get
			{
				return this.GetTable<Ocena>();
			}
		}
		
		public System.Data.Linq.Table<Przedmiot> Przedmiots
		{
			get
			{
				return this.GetTable<Przedmiot>();
			}
		}
		
		public System.Data.Linq.Table<Uczen> Uczens
		{
			get
			{
				return this.GetTable<Uczen>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Klasas")]
	public partial class Klasa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NazwaKlasy;
		
		private string _ProfilKlasy;
		
		private EntitySet<Uczen> _Uczens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNazwaKlasyChanging(string value);
    partial void OnNazwaKlasyChanged();
    partial void OnProfilKlasyChanging(string value);
    partial void OnProfilKlasyChanged();
    #endregion
		
		public Klasa()
		{
			this._Uczens = new EntitySet<Uczen>(new Action<Uczen>(this.attach_Uczens), new Action<Uczen>(this.detach_Uczens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazwaKlasy", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NazwaKlasy
		{
			get
			{
				return this._NazwaKlasy;
			}
			set
			{
				if ((this._NazwaKlasy != value))
				{
					this.OnNazwaKlasyChanging(value);
					this.SendPropertyChanging();
					this._NazwaKlasy = value;
					this.SendPropertyChanged("NazwaKlasy");
					this.OnNazwaKlasyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfilKlasy", DbType="NVarChar(MAX)")]
		public string ProfilKlasy
		{
			get
			{
				return this._ProfilKlasy;
			}
			set
			{
				if ((this._ProfilKlasy != value))
				{
					this.OnProfilKlasyChanging(value);
					this.SendPropertyChanging();
					this._ProfilKlasy = value;
					this.SendPropertyChanged("ProfilKlasy");
					this.OnProfilKlasyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klasa_Uczen", Storage="_Uczens", ThisKey="ID", OtherKey="KlasaID")]
		public EntitySet<Uczen> Uczens
		{
			get
			{
				return this._Uczens;
			}
			set
			{
				this._Uczens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Uczens(Uczen entity)
		{
			this.SendPropertyChanging();
			entity.Klasa = this;
		}
		
		private void detach_Uczens(Uczen entity)
		{
			this.SendPropertyChanging();
			entity.Klasa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nauczyciels")]
	public partial class Nauczyciel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Imie;
		
		private string _Nazwisko;
		
		private int _NumerTelefonu;
		
		private string _Adres;
		
		private string _Email;
		
		private EntitySet<Przedmiot> _Przedmiots;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnNumerTelefonuChanging(int value);
    partial void OnNumerTelefonuChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Nauczyciel()
		{
			this._Przedmiots = new EntitySet<Przedmiot>(new Action<Przedmiot>(this.attach_Przedmiots), new Action<Przedmiot>(this.detach_Przedmiots));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerTelefonu", DbType="Int NOT NULL")]
		public int NumerTelefonu
		{
			get
			{
				return this._NumerTelefonu;
			}
			set
			{
				if ((this._NumerTelefonu != value))
				{
					this.OnNumerTelefonuChanging(value);
					this.SendPropertyChanging();
					this._NumerTelefonu = value;
					this.SendPropertyChanged("NumerTelefonu");
					this.OnNumerTelefonuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nauczyciel_Przedmiot", Storage="_Przedmiots", ThisKey="ID", OtherKey="NauczycielID")]
		public EntitySet<Przedmiot> Przedmiots
		{
			get
			{
				return this._Przedmiots;
			}
			set
			{
				this._Przedmiots.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Przedmiots(Przedmiot entity)
		{
			this.SendPropertyChanging();
			entity.Nauczyciel = this;
		}
		
		private void detach_Przedmiots(Przedmiot entity)
		{
			this.SendPropertyChanging();
			entity.Nauczyciel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nieobecnoscs")]
	public partial class Nieobecnosc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Data;
		
		private int _UczenID;
		
		private int _PrzedmiotID;
		
		private bool _CzyUsprawiedliwiona;
		
		private EntityRef<Przedmiot> _Przedmiot;
		
		private EntityRef<Uczen> _Uczen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnUczenIDChanging(int value);
    partial void OnUczenIDChanged();
    partial void OnPrzedmiotIDChanging(int value);
    partial void OnPrzedmiotIDChanged();
    partial void OnCzyUsprawiedliwionaChanging(bool value);
    partial void OnCzyUsprawiedliwionaChanged();
    #endregion
		
		public Nieobecnosc()
		{
			this._Przedmiot = default(EntityRef<Przedmiot>);
			this._Uczen = default(EntityRef<Uczen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UczenID", DbType="Int NOT NULL")]
		public int UczenID
		{
			get
			{
				return this._UczenID;
			}
			set
			{
				if ((this._UczenID != value))
				{
					if (this._Uczen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUczenIDChanging(value);
					this.SendPropertyChanging();
					this._UczenID = value;
					this.SendPropertyChanged("UczenID");
					this.OnUczenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrzedmiotID", DbType="Int NOT NULL")]
		public int PrzedmiotID
		{
			get
			{
				return this._PrzedmiotID;
			}
			set
			{
				if ((this._PrzedmiotID != value))
				{
					if (this._Przedmiot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrzedmiotIDChanging(value);
					this.SendPropertyChanging();
					this._PrzedmiotID = value;
					this.SendPropertyChanged("PrzedmiotID");
					this.OnPrzedmiotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyUsprawiedliwiona", DbType="Bit NOT NULL")]
		public bool CzyUsprawiedliwiona
		{
			get
			{
				return this._CzyUsprawiedliwiona;
			}
			set
			{
				if ((this._CzyUsprawiedliwiona != value))
				{
					this.OnCzyUsprawiedliwionaChanging(value);
					this.SendPropertyChanging();
					this._CzyUsprawiedliwiona = value;
					this.SendPropertyChanged("CzyUsprawiedliwiona");
					this.OnCzyUsprawiedliwionaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Przedmiot_Nieobecnosc", Storage="_Przedmiot", ThisKey="PrzedmiotID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Przedmiot Przedmiot
		{
			get
			{
				return this._Przedmiot.Entity;
			}
			set
			{
				Przedmiot previousValue = this._Przedmiot.Entity;
				if (((previousValue != value) 
							|| (this._Przedmiot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Przedmiot.Entity = null;
						previousValue.Nieobecnoscs.Remove(this);
					}
					this._Przedmiot.Entity = value;
					if ((value != null))
					{
						value.Nieobecnoscs.Add(this);
						this._PrzedmiotID = value.ID;
					}
					else
					{
						this._PrzedmiotID = default(int);
					}
					this.SendPropertyChanged("Przedmiot");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uczen_Nieobecnosc", Storage="_Uczen", ThisKey="UczenID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Uczen Uczen
		{
			get
			{
				return this._Uczen.Entity;
			}
			set
			{
				Uczen previousValue = this._Uczen.Entity;
				if (((previousValue != value) 
							|| (this._Uczen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uczen.Entity = null;
						previousValue.Nieobecnoscs.Remove(this);
					}
					this._Uczen.Entity = value;
					if ((value != null))
					{
						value.Nieobecnoscs.Add(this);
						this._UczenID = value.ID;
					}
					else
					{
						this._UczenID = default(int);
					}
					this.SendPropertyChanged("Uczen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ocenas")]
	public partial class Ocena : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _WartoscOceny;
		
		private int _UczenID;
		
		private int _PrzedmiotID;
		
		private EntityRef<Przedmiot> _Przedmiot;
		
		private EntityRef<Uczen> _Uczen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWartoscOcenyChanging(int value);
    partial void OnWartoscOcenyChanged();
    partial void OnUczenIDChanging(int value);
    partial void OnUczenIDChanged();
    partial void OnPrzedmiotIDChanging(int value);
    partial void OnPrzedmiotIDChanged();
    #endregion
		
		public Ocena()
		{
			this._Przedmiot = default(EntityRef<Przedmiot>);
			this._Uczen = default(EntityRef<Uczen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WartoscOceny", DbType="Int NOT NULL")]
		public int WartoscOceny
		{
			get
			{
				return this._WartoscOceny;
			}
			set
			{
				if ((this._WartoscOceny != value))
				{
					this.OnWartoscOcenyChanging(value);
					this.SendPropertyChanging();
					this._WartoscOceny = value;
					this.SendPropertyChanged("WartoscOceny");
					this.OnWartoscOcenyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UczenID", DbType="Int NOT NULL")]
		public int UczenID
		{
			get
			{
				return this._UczenID;
			}
			set
			{
				if ((this._UczenID != value))
				{
					if (this._Uczen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUczenIDChanging(value);
					this.SendPropertyChanging();
					this._UczenID = value;
					this.SendPropertyChanged("UczenID");
					this.OnUczenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrzedmiotID", DbType="Int NOT NULL")]
		public int PrzedmiotID
		{
			get
			{
				return this._PrzedmiotID;
			}
			set
			{
				if ((this._PrzedmiotID != value))
				{
					if (this._Przedmiot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrzedmiotIDChanging(value);
					this.SendPropertyChanging();
					this._PrzedmiotID = value;
					this.SendPropertyChanged("PrzedmiotID");
					this.OnPrzedmiotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Przedmiot_Ocena", Storage="_Przedmiot", ThisKey="PrzedmiotID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Przedmiot Przedmiot
		{
			get
			{
				return this._Przedmiot.Entity;
			}
			set
			{
				Przedmiot previousValue = this._Przedmiot.Entity;
				if (((previousValue != value) 
							|| (this._Przedmiot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Przedmiot.Entity = null;
						previousValue.Ocenas.Remove(this);
					}
					this._Przedmiot.Entity = value;
					if ((value != null))
					{
						value.Ocenas.Add(this);
						this._PrzedmiotID = value.ID;
					}
					else
					{
						this._PrzedmiotID = default(int);
					}
					this.SendPropertyChanged("Przedmiot");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uczen_Ocena", Storage="_Uczen", ThisKey="UczenID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Uczen Uczen
		{
			get
			{
				return this._Uczen.Entity;
			}
			set
			{
				Uczen previousValue = this._Uczen.Entity;
				if (((previousValue != value) 
							|| (this._Uczen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Uczen.Entity = null;
						previousValue.Ocenas.Remove(this);
					}
					this._Uczen.Entity = value;
					if ((value != null))
					{
						value.Ocenas.Add(this);
						this._UczenID = value.ID;
					}
					else
					{
						this._UczenID = default(int);
					}
					this.SendPropertyChanged("Uczen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Przedmiots")]
	public partial class Przedmiot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NazwaPrzedmiotu;
		
		private int _NauczycielID;
		
		private EntitySet<Nieobecnosc> _Nieobecnoscs;
		
		private EntitySet<Ocena> _Ocenas;
		
		private EntityRef<Nauczyciel> _Nauczyciel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNazwaPrzedmiotuChanging(string value);
    partial void OnNazwaPrzedmiotuChanged();
    partial void OnNauczycielIDChanging(int value);
    partial void OnNauczycielIDChanged();
    #endregion
		
		public Przedmiot()
		{
			this._Nieobecnoscs = new EntitySet<Nieobecnosc>(new Action<Nieobecnosc>(this.attach_Nieobecnoscs), new Action<Nieobecnosc>(this.detach_Nieobecnoscs));
			this._Ocenas = new EntitySet<Ocena>(new Action<Ocena>(this.attach_Ocenas), new Action<Ocena>(this.detach_Ocenas));
			this._Nauczyciel = default(EntityRef<Nauczyciel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NazwaPrzedmiotu", DbType="NVarChar(MAX)")]
		public string NazwaPrzedmiotu
		{
			get
			{
				return this._NazwaPrzedmiotu;
			}
			set
			{
				if ((this._NazwaPrzedmiotu != value))
				{
					this.OnNazwaPrzedmiotuChanging(value);
					this.SendPropertyChanging();
					this._NazwaPrzedmiotu = value;
					this.SendPropertyChanged("NazwaPrzedmiotu");
					this.OnNazwaPrzedmiotuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NauczycielID", DbType="Int NOT NULL")]
		public int NauczycielID
		{
			get
			{
				return this._NauczycielID;
			}
			set
			{
				if ((this._NauczycielID != value))
				{
					if (this._Nauczyciel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNauczycielIDChanging(value);
					this.SendPropertyChanging();
					this._NauczycielID = value;
					this.SendPropertyChanged("NauczycielID");
					this.OnNauczycielIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Przedmiot_Nieobecnosc", Storage="_Nieobecnoscs", ThisKey="ID", OtherKey="PrzedmiotID")]
		public EntitySet<Nieobecnosc> Nieobecnoscs
		{
			get
			{
				return this._Nieobecnoscs;
			}
			set
			{
				this._Nieobecnoscs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Przedmiot_Ocena", Storage="_Ocenas", ThisKey="ID", OtherKey="PrzedmiotID")]
		public EntitySet<Ocena> Ocenas
		{
			get
			{
				return this._Ocenas;
			}
			set
			{
				this._Ocenas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nauczyciel_Przedmiot", Storage="_Nauczyciel", ThisKey="NauczycielID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Nauczyciel Nauczyciel
		{
			get
			{
				return this._Nauczyciel.Entity;
			}
			set
			{
				Nauczyciel previousValue = this._Nauczyciel.Entity;
				if (((previousValue != value) 
							|| (this._Nauczyciel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nauczyciel.Entity = null;
						previousValue.Przedmiots.Remove(this);
					}
					this._Nauczyciel.Entity = value;
					if ((value != null))
					{
						value.Przedmiots.Add(this);
						this._NauczycielID = value.ID;
					}
					else
					{
						this._NauczycielID = default(int);
					}
					this.SendPropertyChanged("Nauczyciel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Nieobecnoscs(Nieobecnosc entity)
		{
			this.SendPropertyChanging();
			entity.Przedmiot = this;
		}
		
		private void detach_Nieobecnoscs(Nieobecnosc entity)
		{
			this.SendPropertyChanging();
			entity.Przedmiot = null;
		}
		
		private void attach_Ocenas(Ocena entity)
		{
			this.SendPropertyChanging();
			entity.Przedmiot = this;
		}
		
		private void detach_Ocenas(Ocena entity)
		{
			this.SendPropertyChanging();
			entity.Przedmiot = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uczens")]
	public partial class Uczen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Imie;
		
		private string _Nazwisko;
		
		private int _NumerTelefonu;
		
		private string _Adres;
		
		private string _Email;
		
		private int _KlasaID;
		
		private EntitySet<Nieobecnosc> _Nieobecnoscs;
		
		private EntitySet<Ocena> _Ocenas;
		
		private EntityRef<Klasa> _Klasa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnNumerTelefonuChanging(int value);
    partial void OnNumerTelefonuChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnKlasaIDChanging(int value);
    partial void OnKlasaIDChanged();
    #endregion
		
		public Uczen()
		{
			this._Nieobecnoscs = new EntitySet<Nieobecnosc>(new Action<Nieobecnosc>(this.attach_Nieobecnoscs), new Action<Nieobecnosc>(this.detach_Nieobecnoscs));
			this._Ocenas = new EntitySet<Ocena>(new Action<Ocena>(this.attach_Ocenas), new Action<Ocena>(this.detach_Ocenas));
			this._Klasa = default(EntityRef<Klasa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Imie
		{
			get
			{
				return this._Imie;
			}
			set
			{
				if ((this._Imie != value))
				{
					this.OnImieChanging(value);
					this.SendPropertyChanging();
					this._Imie = value;
					this.SendPropertyChanged("Imie");
					this.OnImieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerTelefonu", DbType="Int NOT NULL")]
		public int NumerTelefonu
		{
			get
			{
				return this._NumerTelefonu;
			}
			set
			{
				if ((this._NumerTelefonu != value))
				{
					this.OnNumerTelefonuChanging(value);
					this.SendPropertyChanging();
					this._NumerTelefonu = value;
					this.SendPropertyChanged("NumerTelefonu");
					this.OnNumerTelefonuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="NVarChar(90) NOT NULL", CanBeNull=false)]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KlasaID", DbType="Int NOT NULL")]
		public int KlasaID
		{
			get
			{
				return this._KlasaID;
			}
			set
			{
				if ((this._KlasaID != value))
				{
					if (this._Klasa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKlasaIDChanging(value);
					this.SendPropertyChanging();
					this._KlasaID = value;
					this.SendPropertyChanged("KlasaID");
					this.OnKlasaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uczen_Nieobecnosc", Storage="_Nieobecnoscs", ThisKey="ID", OtherKey="UczenID")]
		public EntitySet<Nieobecnosc> Nieobecnoscs
		{
			get
			{
				return this._Nieobecnoscs;
			}
			set
			{
				this._Nieobecnoscs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Uczen_Ocena", Storage="_Ocenas", ThisKey="ID", OtherKey="UczenID")]
		public EntitySet<Ocena> Ocenas
		{
			get
			{
				return this._Ocenas;
			}
			set
			{
				this._Ocenas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klasa_Uczen", Storage="_Klasa", ThisKey="KlasaID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Klasa Klasa
		{
			get
			{
				return this._Klasa.Entity;
			}
			set
			{
				Klasa previousValue = this._Klasa.Entity;
				if (((previousValue != value) 
							|| (this._Klasa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klasa.Entity = null;
						previousValue.Uczens.Remove(this);
					}
					this._Klasa.Entity = value;
					if ((value != null))
					{
						value.Uczens.Add(this);
						this._KlasaID = value.ID;
					}
					else
					{
						this._KlasaID = default(int);
					}
					this.SendPropertyChanged("Klasa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Nieobecnoscs(Nieobecnosc entity)
		{
			this.SendPropertyChanging();
			entity.Uczen = this;
		}
		
		private void detach_Nieobecnoscs(Nieobecnosc entity)
		{
			this.SendPropertyChanging();
			entity.Uczen = null;
		}
		
		private void attach_Ocenas(Ocena entity)
		{
			this.SendPropertyChanging();
			entity.Uczen = this;
		}
		
		private void detach_Ocenas(Ocena entity)
		{
			this.SendPropertyChanging();
			entity.Uczen = null;
		}
	}
}
#pragma warning restore 1591
